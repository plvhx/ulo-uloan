# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import bound_serial_pb2 as bound__serial__pb2


class BoundSerialStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetBoundSerial = channel.unary_unary(
        '/inventory.BoundSerial/GetBoundSerial',
        request_serializer=bound__serial__pb2.BoundSerialRequest.SerializeToString,
        response_deserializer=bound__serial__pb2.BoundSerialResponse.FromString,
        )
    self.GetBoundSerials = channel.unary_stream(
        '/inventory.BoundSerial/GetBoundSerials',
        request_serializer=bound__serial__pb2.BoundSerialRequest.SerializeToString,
        response_deserializer=bound__serial__pb2.BoundSerialResponse.FromString,
        )


class BoundSerialServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetBoundSerial(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBoundSerials(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BoundSerialServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetBoundSerial': grpc.unary_unary_rpc_method_handler(
          servicer.GetBoundSerial,
          request_deserializer=bound__serial__pb2.BoundSerialRequest.FromString,
          response_serializer=bound__serial__pb2.BoundSerialResponse.SerializeToString,
      ),
      'GetBoundSerials': grpc.unary_stream_rpc_method_handler(
          servicer.GetBoundSerials,
          request_deserializer=bound__serial__pb2.BoundSerialRequest.FromString,
          response_serializer=bound__serial__pb2.BoundSerialResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'inventory.BoundSerial', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
